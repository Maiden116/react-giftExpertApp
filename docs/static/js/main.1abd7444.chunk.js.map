{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifts.js","components/GIftGridItem.js","components/GiftGrid.js","hooks/useFetchGitfs.js","GiftExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GIftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAkB5C,OAEI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAQD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAe,SAAC,GAAsB,IAApBb,EAAmB,EAAnBA,IAAIU,EAAe,EAAfA,MAAe,EAATD,GAGrC,OACI,yBAAKK,UAAU,wDACX,4BAAKJ,GACL,yBAAKK,IAAKf,EAAKgB,IAAKN,MCJnBO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EACfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAVAC,qBAAU,WACLxB,EAAQC,GAAUwB,MAAM,SAAAC,GACpBH,EACI,CACGf,KAAMkB,EACNL,SAAS,SAGvB,CAACpB,IAEIqB,EDbwBK,CAAc1B,GAAjCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAEpB,OACI,oCACA,wBAAIJ,UAAU,yDAAyDhB,GACrEoB,GAAW,cACZ,yBAAKJ,UAAU,aACPH,EAAOJ,KAAI,SAAAC,GAAG,OAEP,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEbfkB,EAAgB,WAAM,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAKA,4BACO4C,EAAWpB,KAAK,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACI2B,IAAO3B,EACPA,SAAaA,U,MChBrC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1abd7444.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CategoryAdd = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange= (e) =>{     \r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setinputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />            \r\n\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes ={\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGift = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=OWI1tekxv6XRlkMV01cn4rm9HgQ0H0us`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifts = data.map( img =>{             \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifts\r\n}","import React from 'react'\r\n\r\nexport const GIftGridItem = ( {url,title,id} ) => {\r\n    \r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__slow'>\r\n            <h4>{title}</h4>\r\n            <img src={url} alt={title}/>            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGitfs';\r\nimport { GIftGridItem } from './GIftGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifts(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__backInLeft animate__faster\">{category}</h3>\r\n        { loading && 'Cargando...' }\r\n         <div className='card-grid'>\r\n                {images.map(img =>(    \r\n\r\n                        <GIftGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n  \r\n                ))}\r\n            \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() => {        \r\n         getGift(category).then( imgs => {\r\n             setstate(\r\n                 {\r\n                    data :imgs,\r\n                    loading: false\r\n                }\r\n             )} );\r\n    },[category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\n\r\nexport const GiftExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState([\"Samurai X\"]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpert App</h2>\r\n            <CategoryAdd setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n\r\n\r\n            \r\n            <ol>\r\n                 { categories.map( category =>\r\n                    <GiftGrid \r\n                        key = {category}\r\n                        category = { category }\r\n                    />\r\n                 ) }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp.js';\nimport './index.css';\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}